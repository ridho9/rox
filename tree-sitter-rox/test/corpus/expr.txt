===
Basic expr
===

print true;
print false;
print nil;
print 1;
print 1.2;
print _a;
print _b;
print abcd;
print "";
print "asdsdsd";
print "asd\"asdasd";
print (1);
print !true;

---

(program
  (stmt
    (print_stmt
      (expr
        (bool))))
  (stmt
    (print_stmt
      (expr
        (bool))))
  (stmt
    (print_stmt
      (expr
        (nil))))
  (stmt
    (print_stmt
      (expr
        (number))))
  (stmt
    (print_stmt
      (expr
        (number))))
  (stmt
    (print_stmt
      (expr
        (ident))))
  (stmt
    (print_stmt
      (expr
        (ident))))
  (stmt
    (print_stmt
      (expr
        (ident))))
  (stmt
    (print_stmt
      (expr
        (string))))
  (stmt
    (print_stmt
      (expr
        (string))))
  (stmt
    (print_stmt
      (expr
        (string))))
  (stmt
    (print_stmt
      (expr
        (expr
          (number)))))
  (stmt
    (print_stmt
      (expr
        (unary_expr
          (expr
            (bool)))))))

====
Expr Precedence
====

print -5;
print 1+2;
print 1+2*3;
print 1*2+3;
print 1+-2;
print 1+2>2*2>=5;
print 1+2==3*4;

---

(program
  (stmt
    (print_stmt
      (expr
        (unary_expr
          (expr
            (number))))))
  (stmt
    (print_stmt
      (expr
        (binary_expr
          (expr
            (number))
          (expr
            (number))))))
  (stmt
    (print_stmt
      (expr
        (binary_expr
          (expr
            (number))
          (expr
            (binary_expr
              (expr
                (number))
              (expr
                (number))))))))
  (stmt
    (print_stmt
      (expr
        (binary_expr
          (expr
            (binary_expr
              (expr
                (number))
              (expr
                (number))))
          (expr
            (number))))))
  (stmt
    (print_stmt
      (expr
        (binary_expr
          (expr
            (number))
          (expr
            (unary_expr
              (expr
                (number))))))))
  (stmt
    (print_stmt
      (expr
        (binary_expr
          (expr
            (binary_expr
              (expr
                (binary_expr
                  (expr
                    (number))
                  (expr
                    (number))))
              (expr
                (binary_expr
                  (expr
                    (number))
                  (expr
                    (number))))))
          (expr
            (number))))))
  (stmt
    (print_stmt
      (expr
        (binary_expr
          (expr
            (binary_expr
              (expr
                (number))
              (expr
                (number))))
          (expr
            (binary_expr
              (expr
                (number))
              (expr
                (number)))))))))
