program = { SOI ~ statements ~ EOI }

KEYWORD = { "let" | "print" | "true" | "false" | "nil" }

statements       = { statement* }
statement        = { expr_statement | assign_statement | print_statement | let_statement }
assign_statement = { ident ~ "=" ~ expr ~ ";" }
let_statement    = { "let" ~ ident ~ ("=" ~ expr)? ~ ";" }
print_statement  = { "print" ~ expr ~ ";" }
expr_statement   = { expr_no_block ~ ";" }

expr = { expr_with_block | expr_no_block }

expr_no_block = _{ op_expr }
op_expr       = _{ prefix? ~ primary ~ (infix ~ prefix? ~ primary)* }

expr_with_block = _{ block_expr }
block_expr      =  {
    "{" ~ statements ~ expr_no_block? ~ "}"
}

infix = _{ add | sub | mul | div | eqeq | neq | le | lt | ge | gt }
add   =  { "+" }
sub   =  { "-" }
mul   =  { "*" }
div   =  { "/" }
eqeq  =  { "==" }
neq   =  { "!=" }
le    =  { "<=" }
lt    =  { "<" }
ge    =  { ">=" }
gt    =  { ">" }

prefix = _{ neg | not }
neg    =  { "-" }
not    =  { "!" }

primary    = _{ number | bool | nil | "(" ~ expr ~ ")" | string | ident }
number     = @{ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT+ | ASCII_DIGIT) ~ ("." ~ ASCII_DIGIT+)? }
bool       =  { "true" | "false" }
nil        =  { "nil" }
string     = ${ "\"" ~ inner ~ "\"" }
inner      = ${ char* }
char       =  { char_noesc | char_esc }
char_noesc =  { !("\"" | "\\") ~ ANY }
char_esc   =  {
    "\\" ~ ("\"" | "\\" | "/" | "n" | "r" | "t")
}
ident      = @{ !(KEYWORD ~ !(ASCII_ALPHA | "_")) ~ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

WHITESPACE = _{ " " | "\t" | NEWLINE }
